'use strict'

const chai = require('chai')
const should = chai.should()
const assert = chai.assert

const Verify = require('../app/modules/verify')

describe('Verify', function() {
	const verify = new Verify()

	before(function() {

	})

	it('Is empty', function(done) {
		verify.isEmpty(null).should.equal(true)
		verify.isEmpty(undefined).should.equal(true)
		verify.isEmpty('').should.equal(true)
		verify.isEmpty(' ').should.equal(false)
		verify.isEmpty({}).should.equal(false)
		verify.isEmpty([]).should.equal(true)
		verify.isEmpty('a').should.equal(false)
		done()
	})

	it('Is number', function(done) {
		verify.isNumber(null).should.equal(false)
		verify.isNumber(undefined).should.equal(false)
		verify.isNumber('').should.equal(false)
		verify.isNumber({}).should.equal(false)
		verify.isNumber([]).should.equal(false)
		verify.isNumber(' ').should.equal(false)
		verify.isNumber('    ').should.equal(false)
		verify.isNumber('a').should.equal(false)
		verify.isNumber('1').should.equal(true)
		verify.isNumber(1).should.equal(true)
		verify.isNumber(1.1).should.equal(true)
		verify.isNumber(0).should.equal(true)
		verify.isNumber(0.1).should.equal(true)
		verify.isNumber(-1).should.equal(true)
		done()
	})

	it('In number', function(done) {
		verify.inNumber(null,3,10).should.equal(false)
		verify.inNumber(undefined,3,10).should.equal(false)
		verify.inNumber('',3,10).should.equal(false)
		verify.inNumber({},3,10).should.equal(false)
		verify.inNumber([],3,10).should.equal(false)
		verify.inNumber(' ',3,10).should.equal(false)
		verify.inNumber('    ',3,10).should.equal(false)
		verify.inNumber('a',3,10).should.equal(false)
		verify.inNumber('3',3,10).should.equal(true)
		verify.inNumber(3,3,10).should.equal(true)
		verify.inNumber(3.1,3,10).should.equal(true)
		verify.inNumber(0,-3,3).should.equal(true)
		verify.inNumber(0.1,-3,3).should.equal(true)
		verify.inNumber(-1,-3,3).should.equal(true)
		done()
	})

	it('Checking length', function(done) {
		verify.checkLength(null, 3,6).should.equal(false)
		verify.checkLength(undefined, 3,6).should.equal(false)
		verify.checkLength({},0,0).should.equal(false)
		verify.checkLength([],0,0).should.equal(false)
		verify.checkLength('ab', 3,6).should.equal(false)
		verify.checkLength('abcdefg', 3,6).should.equal(false)
		verify.checkLength('a    a', 3,6).should.equal(true)
		verify.checkLength('\'\'\'\'\'\'', 3,6).should.equal(true)
		verify.checkLength(12345, 3,6).should.equal(false)
		verify.checkLength('12345', 3,6).should.equal(true)
		done()
	})

	it('Verify Username', function(done) {
		verify.username(null, 3, 6).should.equal(false)
		verify.username(undefined, 3, 6).should.equal(false)
		verify.username(11111, 3, 6).should.equal(false)
		verify.username({},3,6).should.equal(false)
		verify.username([],3,6).should.equal(false)
		verify.username('aa', 3, 6).should.equal(false)
		verify.username('aaaaaaa', 3, 6).should.equal(false)
		verify.username('aaa\n', 3, 6).should.equal(false)
		verify.username('aaa\'', 3, 6).should.equal(false)
		verify.username('aaa\"', 3, 6).should.equal(false)
		verify.username('aaa@', 3, 6).should.equal(false)
		verify.username('aaa#', 3, 6).should.equal(false)
		verify.username('aaa~', 3, 6).should.equal(false)
		verify.username('aaa"', 3, 6).should.equal(false)
		verify.username('aaa*', 3, 6).should.equal(false)
		verify.username('aaa&', 3, 6).should.equal(false)
		verify.username('aaa/', 3, 6).should.equal(false)
		verify.username('aaa$', 3, 6).should.equal(false)
		verify.username('     ', 3, 6).should.equal(false)
		verify.username('aa+', 3, 6).should.equal(true)
		verify.username('aa_', 3, 6).should.equal(true)
		verify.username('aa-', 3, 6).should.equal(true)
		verify.username('012', 3, 6).should.equal(true)
		verify.username('aaa', 3, 6).should.equal(true)
		verify.username('aaaa', 3, 6).should.equal(true)
		verify.username('aaaaa', 3, 6).should.equal(true)
		verify.username('aaaaaa', 3, 6).should.equal(true)
		done()
	})

	it('Verify password', function(done) {
		verify.password(null,3,6).should.equal(false)
		verify.password(undefined,3,6).should.equal(false)
		verify.password(11111,3,6).should.equal(false)
		verify.password('aa(',3,6).should.equal(false)
		verify.password('aa)',3,6).should.equal(false)
		verify.password('aa{',3,6).should.equal(false)
		verify.password('aa}',3,6).should.equal(false)
		verify.password('aa[',3,6).should.equal(false)
		verify.password('aa]',3,6).should.equal(false)
		verify.password('~!@#$%',3,6).should.equal(true)
		verify.password('^&*=+-',3,6).should.equal(true)
		verify.password(',.?',3,6).should.equal(true)
		verify.password('aa~',3,6).should.equal(true)
		verify.password('aa!',3,6).should.equal(true)
		verify.password('aa@',3,6).should.equal(true)
		verify.password('aa#',3,6).should.equal(true)
		verify.password('aa$',3,6).should.equal(true)
		verify.password('aa%',3,6).should.equal(true)
		verify.password('aa^',3,6).should.equal(true)
		verify.password('aa&',3,6).should.equal(true)
		verify.password('aa*',3,6).should.equal(true)
		verify.password('aa-',3,6).should.equal(true)
		verify.password('aa_',3,6).should.equal(true)
		verify.password('aa+',3,6).should.equal(true)
		verify.password('aa=',3,6).should.equal(true)
		verify.password('aa,',3,6).should.equal(true)
		verify.password('aa.',3,6).should.equal(true)
		verify.password('aa?',3,6).should.equal(true)
		verify.password('abc',3,6).should.equal(true)
		verify.password('012',3,6).should.equal(true)
		verify.password('ABC',3,6).should.equal(true)
		done()
	})
	
})
